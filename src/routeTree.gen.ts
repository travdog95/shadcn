/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WardlistImport } from './routes/wardlist'
import { Route as UsersImport } from './routes/users'
import { Route as SpeakertrackerImport } from './routes/speakertracker'
import { Route as SacramentmeetingsImport } from './routes/sacramentmeetings'
import { Route as PrayertrackerImport } from './routes/prayertracker'
import { Route as MigrationImport } from './routes/migration'
import { Route as MemberslistImport } from './routes/memberslist'
import { Route as DatafilesImport } from './routes/datafiles'
import { Route as CallingsworkshopImport } from './routes/callingsworkshop'
import { Route as CallingsImport } from './routes/callings'
import { Route as IndexImport } from './routes/index'
import { Route as MigrationMembersImport } from './routes/migration.members'
import { Route as MigrationCallingsImport } from './routes/migration.callings'
import { Route as CallingsIdImport } from './routes/callings.$id'

// Create/Update Routes

const WardlistRoute = WardlistImport.update({
  id: '/wardlist',
  path: '/wardlist',
  getParentRoute: () => rootRoute,
} as any)

const UsersRoute = UsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const SpeakertrackerRoute = SpeakertrackerImport.update({
  id: '/speakertracker',
  path: '/speakertracker',
  getParentRoute: () => rootRoute,
} as any)

const SacramentmeetingsRoute = SacramentmeetingsImport.update({
  id: '/sacramentmeetings',
  path: '/sacramentmeetings',
  getParentRoute: () => rootRoute,
} as any)

const PrayertrackerRoute = PrayertrackerImport.update({
  id: '/prayertracker',
  path: '/prayertracker',
  getParentRoute: () => rootRoute,
} as any)

const MigrationRoute = MigrationImport.update({
  id: '/migration',
  path: '/migration',
  getParentRoute: () => rootRoute,
} as any)

const MemberslistRoute = MemberslistImport.update({
  id: '/memberslist',
  path: '/memberslist',
  getParentRoute: () => rootRoute,
} as any)

const DatafilesRoute = DatafilesImport.update({
  id: '/datafiles',
  path: '/datafiles',
  getParentRoute: () => rootRoute,
} as any)

const CallingsworkshopRoute = CallingsworkshopImport.update({
  id: '/callingsworkshop',
  path: '/callingsworkshop',
  getParentRoute: () => rootRoute,
} as any)

const CallingsRoute = CallingsImport.update({
  id: '/callings',
  path: '/callings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MigrationMembersRoute = MigrationMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => MigrationRoute,
} as any)

const MigrationCallingsRoute = MigrationCallingsImport.update({
  id: '/callings',
  path: '/callings',
  getParentRoute: () => MigrationRoute,
} as any)

const CallingsIdRoute = CallingsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CallingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/callings': {
      id: '/callings'
      path: '/callings'
      fullPath: '/callings'
      preLoaderRoute: typeof CallingsImport
      parentRoute: typeof rootRoute
    }
    '/callingsworkshop': {
      id: '/callingsworkshop'
      path: '/callingsworkshop'
      fullPath: '/callingsworkshop'
      preLoaderRoute: typeof CallingsworkshopImport
      parentRoute: typeof rootRoute
    }
    '/datafiles': {
      id: '/datafiles'
      path: '/datafiles'
      fullPath: '/datafiles'
      preLoaderRoute: typeof DatafilesImport
      parentRoute: typeof rootRoute
    }
    '/memberslist': {
      id: '/memberslist'
      path: '/memberslist'
      fullPath: '/memberslist'
      preLoaderRoute: typeof MemberslistImport
      parentRoute: typeof rootRoute
    }
    '/migration': {
      id: '/migration'
      path: '/migration'
      fullPath: '/migration'
      preLoaderRoute: typeof MigrationImport
      parentRoute: typeof rootRoute
    }
    '/prayertracker': {
      id: '/prayertracker'
      path: '/prayertracker'
      fullPath: '/prayertracker'
      preLoaderRoute: typeof PrayertrackerImport
      parentRoute: typeof rootRoute
    }
    '/sacramentmeetings': {
      id: '/sacramentmeetings'
      path: '/sacramentmeetings'
      fullPath: '/sacramentmeetings'
      preLoaderRoute: typeof SacramentmeetingsImport
      parentRoute: typeof rootRoute
    }
    '/speakertracker': {
      id: '/speakertracker'
      path: '/speakertracker'
      fullPath: '/speakertracker'
      preLoaderRoute: typeof SpeakertrackerImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/wardlist': {
      id: '/wardlist'
      path: '/wardlist'
      fullPath: '/wardlist'
      preLoaderRoute: typeof WardlistImport
      parentRoute: typeof rootRoute
    }
    '/callings/$id': {
      id: '/callings/$id'
      path: '/$id'
      fullPath: '/callings/$id'
      preLoaderRoute: typeof CallingsIdImport
      parentRoute: typeof CallingsImport
    }
    '/migration/callings': {
      id: '/migration/callings'
      path: '/callings'
      fullPath: '/migration/callings'
      preLoaderRoute: typeof MigrationCallingsImport
      parentRoute: typeof MigrationImport
    }
    '/migration/members': {
      id: '/migration/members'
      path: '/members'
      fullPath: '/migration/members'
      preLoaderRoute: typeof MigrationMembersImport
      parentRoute: typeof MigrationImport
    }
  }
}

// Create and export the route tree

interface CallingsRouteChildren {
  CallingsIdRoute: typeof CallingsIdRoute
}

const CallingsRouteChildren: CallingsRouteChildren = {
  CallingsIdRoute: CallingsIdRoute,
}

const CallingsRouteWithChildren = CallingsRoute._addFileChildren(
  CallingsRouteChildren,
)

interface MigrationRouteChildren {
  MigrationCallingsRoute: typeof MigrationCallingsRoute
  MigrationMembersRoute: typeof MigrationMembersRoute
}

const MigrationRouteChildren: MigrationRouteChildren = {
  MigrationCallingsRoute: MigrationCallingsRoute,
  MigrationMembersRoute: MigrationMembersRoute,
}

const MigrationRouteWithChildren = MigrationRoute._addFileChildren(
  MigrationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/callings': typeof CallingsRouteWithChildren
  '/callingsworkshop': typeof CallingsworkshopRoute
  '/datafiles': typeof DatafilesRoute
  '/memberslist': typeof MemberslistRoute
  '/migration': typeof MigrationRouteWithChildren
  '/prayertracker': typeof PrayertrackerRoute
  '/sacramentmeetings': typeof SacramentmeetingsRoute
  '/speakertracker': typeof SpeakertrackerRoute
  '/users': typeof UsersRoute
  '/wardlist': typeof WardlistRoute
  '/callings/$id': typeof CallingsIdRoute
  '/migration/callings': typeof MigrationCallingsRoute
  '/migration/members': typeof MigrationMembersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/callings': typeof CallingsRouteWithChildren
  '/callingsworkshop': typeof CallingsworkshopRoute
  '/datafiles': typeof DatafilesRoute
  '/memberslist': typeof MemberslistRoute
  '/migration': typeof MigrationRouteWithChildren
  '/prayertracker': typeof PrayertrackerRoute
  '/sacramentmeetings': typeof SacramentmeetingsRoute
  '/speakertracker': typeof SpeakertrackerRoute
  '/users': typeof UsersRoute
  '/wardlist': typeof WardlistRoute
  '/callings/$id': typeof CallingsIdRoute
  '/migration/callings': typeof MigrationCallingsRoute
  '/migration/members': typeof MigrationMembersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/callings': typeof CallingsRouteWithChildren
  '/callingsworkshop': typeof CallingsworkshopRoute
  '/datafiles': typeof DatafilesRoute
  '/memberslist': typeof MemberslistRoute
  '/migration': typeof MigrationRouteWithChildren
  '/prayertracker': typeof PrayertrackerRoute
  '/sacramentmeetings': typeof SacramentmeetingsRoute
  '/speakertracker': typeof SpeakertrackerRoute
  '/users': typeof UsersRoute
  '/wardlist': typeof WardlistRoute
  '/callings/$id': typeof CallingsIdRoute
  '/migration/callings': typeof MigrationCallingsRoute
  '/migration/members': typeof MigrationMembersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/callings'
    | '/callingsworkshop'
    | '/datafiles'
    | '/memberslist'
    | '/migration'
    | '/prayertracker'
    | '/sacramentmeetings'
    | '/speakertracker'
    | '/users'
    | '/wardlist'
    | '/callings/$id'
    | '/migration/callings'
    | '/migration/members'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/callings'
    | '/callingsworkshop'
    | '/datafiles'
    | '/memberslist'
    | '/migration'
    | '/prayertracker'
    | '/sacramentmeetings'
    | '/speakertracker'
    | '/users'
    | '/wardlist'
    | '/callings/$id'
    | '/migration/callings'
    | '/migration/members'
  id:
    | '__root__'
    | '/'
    | '/callings'
    | '/callingsworkshop'
    | '/datafiles'
    | '/memberslist'
    | '/migration'
    | '/prayertracker'
    | '/sacramentmeetings'
    | '/speakertracker'
    | '/users'
    | '/wardlist'
    | '/callings/$id'
    | '/migration/callings'
    | '/migration/members'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CallingsRoute: typeof CallingsRouteWithChildren
  CallingsworkshopRoute: typeof CallingsworkshopRoute
  DatafilesRoute: typeof DatafilesRoute
  MemberslistRoute: typeof MemberslistRoute
  MigrationRoute: typeof MigrationRouteWithChildren
  PrayertrackerRoute: typeof PrayertrackerRoute
  SacramentmeetingsRoute: typeof SacramentmeetingsRoute
  SpeakertrackerRoute: typeof SpeakertrackerRoute
  UsersRoute: typeof UsersRoute
  WardlistRoute: typeof WardlistRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CallingsRoute: CallingsRouteWithChildren,
  CallingsworkshopRoute: CallingsworkshopRoute,
  DatafilesRoute: DatafilesRoute,
  MemberslistRoute: MemberslistRoute,
  MigrationRoute: MigrationRouteWithChildren,
  PrayertrackerRoute: PrayertrackerRoute,
  SacramentmeetingsRoute: SacramentmeetingsRoute,
  SpeakertrackerRoute: SpeakertrackerRoute,
  UsersRoute: UsersRoute,
  WardlistRoute: WardlistRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/callings",
        "/callingsworkshop",
        "/datafiles",
        "/memberslist",
        "/migration",
        "/prayertracker",
        "/sacramentmeetings",
        "/speakertracker",
        "/users",
        "/wardlist"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/callings": {
      "filePath": "callings.tsx",
      "children": [
        "/callings/$id"
      ]
    },
    "/callingsworkshop": {
      "filePath": "callingsworkshop.tsx"
    },
    "/datafiles": {
      "filePath": "datafiles.tsx"
    },
    "/memberslist": {
      "filePath": "memberslist.tsx"
    },
    "/migration": {
      "filePath": "migration.tsx",
      "children": [
        "/migration/callings",
        "/migration/members"
      ]
    },
    "/prayertracker": {
      "filePath": "prayertracker.tsx"
    },
    "/sacramentmeetings": {
      "filePath": "sacramentmeetings.tsx"
    },
    "/speakertracker": {
      "filePath": "speakertracker.tsx"
    },
    "/users": {
      "filePath": "users.tsx"
    },
    "/wardlist": {
      "filePath": "wardlist.tsx"
    },
    "/callings/$id": {
      "filePath": "callings.$id.tsx",
      "parent": "/callings"
    },
    "/migration/callings": {
      "filePath": "migration.callings.tsx",
      "parent": "/migration"
    },
    "/migration/members": {
      "filePath": "migration.members.tsx",
      "parent": "/migration"
    }
  }
}
ROUTE_MANIFEST_END */
